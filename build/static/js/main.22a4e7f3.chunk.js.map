{"version":3,"sources":["Images/undraw_profile_pic_ic5t.svg","Components/LandingPage/RegisterForm.jsx","Components/LandingPage/LandingPage.jsx","Components/Snack/SnackbarAlert.jsx","Components/BodyPage/TablePage.jsx","Components/BodyPage/ProfileEdit.jsx","App.js","index.js"],"names":["Transition","React","forwardRef","props","ref","Slide","direction","RegisterForm","registerDetails","useForm","register","handleSubmit","watch","errors","reset","useState","open","setOpen","exampleInputPassword1","useRef","current","saveButton","handleClose","Fragment","Button","variant","color","style","display","onClick","Dialog","TransitionComponent","keepMounted","onClose","aria-labelledby","DialogTitle","id","DialogContent","dividers","onSubmit","data","className","for","type","name","required","username","message","aria-describedby","pattern","email","date","minLength","value","validate","password","DialogActions","e","click","Alert","elevation","LandingPage","loginDetails","useEffect","Message","window","location","href","event","registerbutton","statusCode","Snackbar","autoHideDuration","severity","src","icon","placeholder","autofocus","defaultValue","class","target","aria-label","SnackbarAlert","isOpen","alertType","multibutton","primaryClick","secondaryClick","anchorOrigin","vertical","horizontal","position","cursor","top","left","StyledTableCell","withStyles","theme","head","backgroundColor","palette","common","white","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","margin","spacing","AvatarCol","width","height","AvatarCol2","uploadInput","error","main","fileUploaded","success","ModalForm","padding","overflowY","table","marginTop","TablePage","profileCreation","profileGrasp","profile","updateProfileDetails","deleteprofile","deleteStatus","setValue","classes","NodeJs","Php","MongoDB","Mysql","state","setState","Image","previewImage","docopen","setDocOpen","Profile","setFile","report","setReport","fileNotFound","setFileNotFound","gender","setGender","multiButton","setmultiButton","setAlertType","snackBarMessage","setSnackBarMessage","isSnackBarOpen","setOpenSnackBar","tableData","setData","record","setRecord","setDocx","dtype","setDtype","docName","setName","modalEdit","setEditModal","profileData","setProfileData","updateDetails","setupdateDetails","setId","undefined","profileId","map","list","a","ProfileImg","fetch","then","res","blob","console","log","file","split","pop","search","convertBase64","base64","base64doc","profileImg","docImg","profileName","Gender","skills","handleChange","checked","hiddenFileInput","hiddenFileInput2","customStyles","right","zIndex","opacity","mozOpacity","msFilter","Promise","resolve","reject","fileReader","FileReader","readAsDataURL","onload","result","onerror","document_url","profilesubmit","updateProfile","fileImage","download","title","data-toggle","data-target","aria-controls","aria-expanded","localStorage","clear","TableContainer","component","Paper","Table","TableHead","align","TableBody","row","index","scope","Name","Mobile","Role","Skills","Email","Avatar","viewRecordModal","DocImg","DocName","DOB","editModal","HighlightOff","Box","background","borderRadius","boxShadow","textAlign","fontWeight","border","accept","onChange","preventDefault","reader","fileimage","files","onloadend","mobile","FormGroup","FormLabel","RadioGroup","FormControlLabel","control","Radio","label","gender1","role","marginY","Checkbox","htmlFor","size","button","startIcon","ProfileEdit","formik","setFieldValue","submit","ProfileName","length","resetForm","useFormik","initialValues","enableReinitialize","values","App","setDeleteStatus","userDetails","axios","post","setItem","catch","profileDetails","profileFetch","get","put","delete","exact","path","render","getItem","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22a4e7f3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/undraw_profile_pic_ic5t.e97b4120.svg\";","import React from \"react\";\nimport \"./index.css\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst RegisterForm = React.forwardRef((props, ref) => {\n  const { registerDetails } = props;\n  const { register, handleSubmit, watch, errors, reset } = useForm({});\n  const [open, setOpen] = React.useState(false);\n\n  const exampleInputPassword1 = React.useRef({});\n  exampleInputPassword1.current = watch(\"exampleInputPassword1\", \"\");\n\n  const saveButton = React.useRef({});\n\n  const onSubmit = (data) => {\n    registerDetails(data);\n    setOpen(false);\n    reset();\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const submit = (e) => {\n    saveButton.current.click();\n  };\n\n  return (\n    <React.Fragment>\n      <Button\n        variant=\"outlined\"\n        color=\"primary\"\n        style={{ display: \"none\" }}\n        ref={ref}\n        onClick={handleClickOpen}\n      >\n        Slide in alert dialog\n      </Button>\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Register Yourself!</DialogTitle>\n        <DialogContent dividers>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <div className=\"mb-3\">\n              <label for=\"exampleInputPassword1\" className=\"form-label\">\n                Username\n              </label>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                ref={register({\n                  required: \"This field is required\",\n                })}\n              ></input>\n              {errors.username && <p id=\"error\">{errors.username.message}</p>}\n            </div>\n            <div className=\"mb-3\">\n              <label for=\"exampleInputEmail1\" className=\"form-label\">\n                Email address\n              </label>\n              <input\n                type=\"email\"\n                className=\"form-control\"\n                name=\"email\"\n                aria-describedby=\"emailHelp\"\n                ref={register({\n                  required: \"This field is required\",\n                  pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                })}\n              ></input>\n              <div id=\"emailHelp\" className=\"form-text\">\n                We'll never share your email with anyone else.\n              </div>\n              {errors.email && <p id=\"error\">{errors.email.message}</p>}\n            </div>\n            <div className=\"mb-3\">\n              <label for=\"date\" className=\"form-label\">\n                Date of Birth\n              </label>\n              <input\n                type=\"date\"\n                className=\"form-control\"\n                name=\"DOB\"\n                ref={register({\n                  required: \"This field is required\",\n                })}\n              ></input>\n              {errors.date && <p id=\"error\">{errors.date.message}</p>}\n            </div>\n            <div className=\"mb-3\">\n              <label for=\"exampleInputPassword1\" className=\"form-label\">\n                Password\n              </label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"exampleInputPassword1\"\n                ref={register({\n                  required: \"You must specify a password\",\n                  minLength: {\n                    value: 8,\n                    message: \"Password must have at least 8 characters\",\n                  },\n                })}\n              ></input>\n              {errors.exampleInputPassword1 && (\n                <p id=\"error\">{errors.exampleInputPassword1.message}</p>\n              )}\n            </div>\n            <div className=\"mb-3\">\n              <label className=\"form-label\">Confirm Password</label>\n              <input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                ref={register({\n                  validate: (value) =>\n                    value === exampleInputPassword1.current ||\n                    \"The passwords do not match\",\n                })}\n              ></input>\n              {errors.password && <p id=\"error\">{errors.password.message}</p>}\n            </div>\n            <button\n              style={{ display: \"none\" }}\n              ref={saveButton}\n              type=\"submit\"\n              className=\"btn btn-primary\"\n            >\n              Submit\n            </button>\n          </form>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"login\" onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button id=\"login\" onClick={submit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n});\n\nexport default RegisterForm;\n","import React, { useRef, useState } from \"react\";\nimport \"./index.css\";\nimport \"./social.css\";\nimport icon from \"../../Images/undraw_profile_pic_ic5t.svg\";\nimport { useForm } from \"react-hook-form\";\nimport RegisterForm from \"./RegisterForm\";\nimport Button from \"@material-ui/core/Button\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nfunction LandingPage(props) {\n  const { loginDetails, data } = props;\n  const { register, handleSubmit, watch, errors, reset } = useForm();\n  const [registerData, setRegisterData] = useState(null);\n  const [login, setLogin] = useState(null);\n  const [open, setOpen] = React.useState(false);\n\n  React.useEffect(() => {\n    if (data !== \"\") {\n      setOpen(true);\n    }\n\n    if (data.Message == \"Login Successful\") {\n      window.location.href = \"/table\";\n    }\n  }, [data]);\n\n  const handleClose = (event) => {\n    setOpen(false);\n  };\n\n  const onSubmit = (data) => {\n    loginDetails({ data: data });\n    reset();\n  };\n\n  const registerbutton = useRef(null);\n\n  const registerform = () => {\n    registerbutton.current.click();\n    // console.log(registerbutton)\n  };\n\n  const registerDetails = (register) => {\n    loginDetails({ register: register });\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      {data.Message == \"Login Successful\" ? (\n        data.statusCode == 200 ? (\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert severity=\"success\">LoggedIn Successful</Alert>\n          </Snackbar>\n        ) : (\n          <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n            <Alert severity=\"error\">\n              Please,Verify your email Id and password\n            </Alert>\n          </Snackbar>\n        )\n      ) : data.statusCode == 200 ? (\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert severity=\"success\">\n            Your Account has been registered Successfully\n          </Alert>\n        </Snackbar>\n      ) : (\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\n          <Alert severity=\"error\">\n            Oops ! Error due to some technical issues\n          </Alert>\n        </Snackbar>\n      )}\n      <div className=\"row no-gutter\">\n        <div className=\"col-md-6 d-none d-md-flex bg-image\"></div>\n        <div className=\"col-md-6 bg-light\">\n          <div className=\"login d-flex align-items-center py-5\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <img id=\"avatar\" src={icon}></img>\n                <div className=\"col-lg-10 col-xl-7 mx-auto\">\n                  <h3 className=\"display-4\">Welcome</h3>\n                  <p className=\"text-muted mb-4\">Enter into your Portal !!!</p>\n                  <React.Fragment>\n                    <form onSubmit={handleSubmit(onSubmit)}>\n                      <div className=\"form-group mb-3\">\n                        <input\n                          name=\"email\"\n                          type=\"email\"\n                          placeholder=\"Email address\"\n                          ref={register({ required: true })}\n                          autofocus=\"\"\n                          className=\"form-control rounded-pill border-0 shadow-sm px-4\"\n                        ></input>\n                        {errors.email && (\n                          <span style={{ color: \"red\" }}>\n                            This field is required\n                          </span>\n                        )}\n                      </div>\n\n                      <div className=\"form-group mb-3\">\n                        <input\n                          name=\"password\"\n                          defaultValue=\"\"\n                          ref={register({ required: true })}\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          className=\"form-control rounded-pill border-0 shadow-sm px-4 text-primary\"\n                        ></input>\n                        {errors.password && (\n                          <span style={{ color: \"red\" }}>\n                            This field is required\n                          </span>\n                        )}\n                      </div>\n\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-mixed btn-block text-uppercase mb-2 rounded-pill shadow-sm\"\n                      >\n                        Sign In\n                      </button>\n                    </form>\n                  </React.Fragment>\n\n                  <p class=\"my-3\">\n                    Don't have an account?{\" \"}\n                    <a id=\"login\" onClick={registerform}>\n                      Register Here\n                    </a>\n                  </p>\n\n                  <React.Fragment>\n                    <div className=\"social-buttons\">\n                      <a\n                        href=\"http://www.facebook.com\"\n                        target=\"_blank\"\n                        className=\"social-buttons__button social-button social-button--facebook\"\n                        aria-label=\"Facebook\"\n                      >\n                        <span className=\"social-button__inner\">\n                          <i className=\"fab fa-facebook-f\"></i>\n                        </span>\n                      </a>\n                      <a\n                        href=\"http://www.linkedin.com\"\n                        target=\"_blank\"\n                        className=\"social-buttons__button social-button social-button--linkedin\"\n                        aria-label=\"LinkedIn\"\n                      >\n                        <span className=\"social-button__inner\">\n                          <i className=\"fab fa-linkedin-in\"></i>\n                        </span>\n                      </a>\n                      <a\n                        href=\"http://www.twitter.com\"\n                        target=\"_blank\"\n                        className=\"social-buttons__button social-button social-button--twitter\"\n                        aria-label=\"Twitter\"\n                      >\n                        <span className=\"social-button__inner\">\n                          <i className=\"fab fa-twitter\"></i>\n                        </span>\n                      </a>\n                      <a\n                        href=\"http://www.github.com\"\n                        target=\"_blank\"\n                        className=\"social-buttons__button social-button social-button--github\"\n                        aria-label=\"GitHub\"\n                      >\n                        <span className=\"social-button__inner\">\n                          <i className=\"fab fa-github\"></i>\n                        </span>\n                      </a>\n                    </div>\n                  </React.Fragment>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RegisterForm ref={registerbutton} registerDetails={registerDetails} />\n    </div>\n  );\n}\n\nexport default LandingPage;\n","import { Snackbar } from '@material-ui/core'\nimport CheckIcon from '@material-ui/icons/Check'\nimport React from 'react'\nimport MuiAlert from '@material-ui/lab/Alert'\n\nconst SnackbarAlert = ({\n  isOpen,\n  message,\n  alertType,\n  multibutton,\n  primaryClick,\n  secondaryClick\n}) => {\n  function Alert(props) {\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />\n  }\n\n  return multibutton ? (\n    <Snackbar\n      open={isOpen}\n      onClose={primaryClick}\n      anchorOrigin={{ vertical: 'top', horizontal: 'bottom' }}>\n      <Alert onClose={primaryClick} severity={alertType}>\n        {message}\n        <CheckIcon\n          style={{\n            position: 'relative',\n            cursor: 'pointer',\n            top: '4px',\n            left: '8px'\n          }}\n          onClick={secondaryClick}></CheckIcon>\n      </Alert>\n    </Snackbar>\n  ) : (\n    <Snackbar\n      open={isOpen}\n      onClose={primaryClick}\n      autoHideDuration={3000}\n      anchorOrigin={{ vertical: 'top', horizontal: 'bottom' }}>\n      <>\n        <Alert onClose={primaryClick} severity={alertType}>\n          {message}\n        </Alert>\n      </>\n    </Snackbar>\n  )\n}\n\nexport default SnackbarAlert\n","import React from \"react\";\nimport \"./body.css\";\nimport { useForm } from \"react-hook-form\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Avatar, Box, useTheme, Button } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport SnackbarAlert from \"../Snack/SnackbarAlert\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { HighlightOff } from \"@material-ui/icons\";\n// import ProfileEdit from \"./ProfileEdit\";\nimport { ProfileEdit as ProfileNow } from \"../Container/Container\";\n// import ProfileEdit from \"./ProfileEdit.jsx\"\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#343a40 !important\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  AvatarCol: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  AvatarCol2: {\n    width: \"45%\",\n    height: \"65px\",\n  },\n  uploadInput: {\n    display: \"none\",\n  },\n  error: {\n    color: theme.palette.error.main,\n  },\n  fileUploaded: {\n    color: theme.palette.success.main,\n    margin: \"8px 0\",\n  },\n  ModalForm: {\n    width: \"100%\",\n    padding: \"40px\",\n    \"@media (max-width:767px)\": {\n      padding: \"20px\",\n      height: \"400px\",\n      overflowY: \"auto\",\n    },\n  },\n  table: {\n    position: \"relative\",\n    marginTop: \"10%\",\n  },\n}));\n\nfunction TablePage(props) {\n  const {\n    profileCreation,\n    profileGrasp,\n    data,\n    profile,\n    updateProfileDetails,\n    deleteprofile,\n    deleteStatus,\n  } = props;\n  const { register, handleSubmit, watch, errors, reset, setValue } = useForm(\n    {}\n  );\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [state, setState] = React.useState({\n    NodeJs: true,\n    Php: true,\n    MongoDB: true,\n    Mysql: true,\n  });\n  const [Image, previewImage] = React.useState(\"\");\n  const [docopen, setDocOpen] = React.useState(false);\n  const [Profile, setFile] = React.useState(\"\");\n  const [report, setReport] = React.useState([]);\n  const [fileNotFound, setFileNotFound] = React.useState(false);\n  const [gender, setGender] = React.useState(\"female\");\n  const [multiButton, setmultiButton] = React.useState(false);\n  const [alertType, setAlertType] = React.useState(\"\");\n  const [snackBarMessage, setSnackBarMessage] = React.useState(\"\");\n  const [isSnackBarOpen, setOpenSnackBar] = React.useState(false);\n  const [tableData, setData] = React.useState([]);\n  const [record, setRecord] = React.useState(null);\n  const [docx, setDocx] = React.useState();\n  const [dtype, setDtype] = React.useState(null);\n  const [docName, setName] = React.useState(\"\");\n  const [modalEdit, setEditModal] = React.useState(null);\n  const [profileData, setProfileData] = React.useState(null);\n  const [updateDetails, setupdateDetails] = React.useState(null);\n  const [id, setId] = React.useState(null);\n\n  const saveButton = React.useRef({});\n\n  React.useEffect(() => {\n    profileGrasp();\n    setId(null);\n  }, []);\n\n  React.useEffect(() => {\n    if (updateDetails == null) {\n      //\n    } else {\n      updateProfileDetails({ updateDetails });\n    }\n  }, [updateDetails, setupdateDetails]);\n\n  React.useEffect(() => {\n    if (data == undefined) {\n      //\n    } else if (data?.statusCode == 200) {\n      setOpenSnackBar(true);\n      setSnackBarMessage(\"Profile added successfully!\");\n      setmultiButton(false);\n      setAlertType(\"success\");\n      profileGrasp();\n    }\n  }, [data]);\n\n  React.useEffect(() => {\n    if (deleteStatus == undefined) {\n      //\n    } else if (deleteStatus?.statusCode == 200) {\n      setOpenSnackBar(true);\n      setSnackBarMessage(\"Profile deleted successfully!\");\n      setmultiButton(false);\n      setAlertType(\"success\");\n      profileGrasp();\n      setId(null);\n    }\n  }, [deleteStatus]);\n\n  React.useEffect(() => {\n    if (id === null) {\n      //\n    } else {\n      deleteprofile({ profileId: id });\n    }\n  }, [id, setId]);\n\n  const updateProfile = (data) => {\n    setupdateDetails(data);\n  };\n  React.useEffect(() => {\n    if (profile.data == undefined) {\n      //\n    } else {\n      setData(profile.data);\n      profile.data.map((list) => {\n        let a = list.ProfileImg;\n        previewImage(a);\n        fetch(a)\n          .then((res) => res.blob())\n          .then(console.log);\n      });\n    }\n  }, [profile]);\n\n  const onSubmit = async (data) => {\n    const file = report;\n    if (report != \"\" && Profile != \"\") {\n      if (\n        Profile.name.split(\".\").pop().search(\"pdf\") === 0 ||\n        Profile.name.split(\".\").pop().search(\"docx\") === 0\n      ) {\n        setOpenSnackBar(true);\n        setSnackBarMessage(\n          \"Pdf and Docx file are not supported for profile picture!\"\n        );\n        setmultiButton(false);\n        setAlertType(\"info\");\n      } else if (\n        file.name.split(\".\").pop().search(\"jpg\") === 0 ||\n        file.name.split(\".\").pop().search(\"png\") === 0 ||\n        file.name.split(\".\").pop().search(\"jpeg\") === 0\n      ) {\n        setOpenSnackBar(true);\n        setSnackBarMessage(\"Jpg and Png file are not supported for Resume!\");\n        setmultiButton(false);\n        setAlertType(\"info\");\n      } else if (\n        Profile.name.split(\".\").pop().search(\"pdf\") !== 0 ||\n        Profile.name.split(\".\").pop().search(\"docx\") !== 0 ||\n        file.name.split(\".\").pop().search(\"jpg\") !== 0 ||\n        file.name.split(\".\").pop().search(\"png\") !== 0 ||\n        file.name.split(\".\").pop().search(\"jpeg\") !== 0\n      ) {\n        let base64 = await convertBase64(Profile);\n        let base64doc = await convertBase64(file);\n        // let format = base64.split(\",\");\n        // let docformat = base64doc.split(\",\");\n\n        profileCreation({\n          ...data,\n          profileImg: base64,\n          docImg: base64doc,\n          profileName: Profile.name,\n          docName: file.name,\n          Gender: gender,\n          skills: state,\n        });\n      }\n    } else {\n      setOpenSnackBar(true);\n      setSnackBarMessage(\"Profile Picture and Resume are mandatory!\");\n      setmultiButton(false);\n      setAlertType(\"info\");\n    }\n    setOpen(false);\n    setReport(\"\");\n    setFileNotFound(false);\n    previewImage(\"\");\n    reset();\n  };\n\n  const handleClickOpen = () => {\n    setReport(\"\");\n    setFileNotFound(false);\n    previewImage(\"\");\n    reset();\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const submit = (e) => {\n    saveButton.current.click();\n  };\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const hiddenFileInput = React.useRef();\n  const hiddenFileInput2 = React.useRef();\n\n  const handleClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n\n  const handleClick2 = (event) => {\n    hiddenFileInput2.current.click();\n  };\n\n  const genderChange = (event) => {\n    setGender(event.target.value);\n    setValue(\"gender1\", event.target.value);\n  };\n\n  const handlePicChange = (event) => {\n    event.preventDefault();\n\n    let reader = new FileReader();\n    let fileimage = event.target.files[0];\n\n    reader.onloadend = () => {\n      setFile(fileimage);\n      previewImage(reader.result);\n    };\n    reader.readAsDataURL(fileimage);\n  };\n\n  const handleDocClose = () => {\n    setDocOpen(false);\n  };\n\n  const customStyles = {\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    zIndex: \"99\",\n    cursor: \"pointer\",\n    display: \"none\",\n    /*This makes the button huge. If you want a bigger button, increase the font size*/\n    fontSize: \"50px\",\n    /*Opacity settings for all browsers*/\n    opacity: \"0\",\n    mozOpacity: \"0\",\n    msFilter: \"progid:DXImageTransform.Microsoft.Alpha(opacity=0)\",\n  };\n\n  const handleFileChange = (event) => {\n    event.preventDefault();\n\n    let reader = new FileReader();\n    let fileimage = event.target.files[0];\n\n    reader.onloadend = () => {\n      setFileNotFound(true);\n      setReport(fileimage);\n    };\n    reader.readAsDataURL(fileimage);\n  };\n\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  const hideSnackBar = () => {\n    setOpenSnackBar(false);\n  };\n\n  const viewRecordModal = (e, record) => {\n    setRecord(record[0]);\n    setName(record[1]);\n    setDocOpen(true);\n  };\n\n  React.useEffect(() => {\n    if (docName == null || docName == undefined) {\n      //\n    } else if (docName.split(\" \").pop() == \"pdf\") {\n      // let document_url= ` https://view.officeapps.live.com/op/view.aspx?src=${record}`\n      let document_url = `https://docs.google.com/viewer?url=${record}`;\n      setDocx(document_url);\n      setDtype(\".pdf\");\n    } else if (\n      docName.split(\".\").pop() == \"docx\" ||\n      docName.split(\".\").pop() == \"doc\"\n    ) {\n      // let document_url= ` https://view.officeapps.live.com/op/view.aspx?src=${record}`\n      let document_url = `https://docs.google.com/viewer?url=${record}`;\n      setDocx(document_url);\n      setDtype(\".docx\");\n    } else {\n      setDocx(null);\n    }\n  }, [docName]);\n\n  const editModal = (data) => {\n    setProfileData(data);\n    setEditModal(true);\n  };\n\n  const updateModal = (value) => {\n    setEditModal(value);\n  };\n\n  const deleteModal = (value) => {\n    console.log(value);\n    setId(value);\n  };\n\n  const logout = () => {\n    localStorage.clear();\n  };\n\n  // const downloadPDF =() =>{\n  //   const linkSource = `data:application/docx;base64,${record}`;\n  //   const downloadLink = document.createElement(\"a\");\n  //   const fileName = {docName};\n  //   downloadLink.href = linkSource;\n  //   downloadLink.download = fileName;\n  //   downloadLink.click();}\n\n  return (\n    <React.Fragment>\n      <ProfileNow\n        profileData={profileData}\n        modalEdit={modalEdit}\n        profilesubmit={updateModal}\n        updateProfile={updateProfile}\n      />\n      <Dialog\n        open={docopen}\n        onClose={handleDocClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Resume</DialogTitle>\n        <DialogContent>\n          {record ? (\n            <div className={classes.fileImage}>\n              <a\n                download={`Resume${dtype}`}\n                href={record}\n                title=\"Download pdf document\"\n              >\n                <u>Click to View Pdf/Document file</u>\n              </a>\n\n              {/* <img type=\"image/jpg\" className={classes.img} src={document} /> */}\n            </div>\n          ) : null}\n        </DialogContent>\n      </Dialog>\n      <SnackbarAlert\n        isOpen={isSnackBarOpen}\n        message={snackBarMessage}\n        alertType={alertType}\n        multibutton={multiButton}\n        primaryClick={hideSnackBar}\n      />\n      <header className=\"header\">\n        <nav className=\"navbar navbar-expand-lg navbar-style navbar-dark bg-dark\">\n          <div className=\"navbar-header \">\n            <button\n              className=\"navbar-toggler\"\n              type=\"button\"\n              data-toggle=\"collapse\"\n              data-target=\"#navbarid\"\n              aria-controls=\"navbarSupportedContent\"\n              aria-expanded=\"false\"\n              aria-label=\"Toggle navigation\"\n            >\n              <span className=\"navbar-toggler-icon\"></span>\n            </button>\n          </div>\n          <div className=\"collapse navbar-right navbar-collapse\" id=\"navbarid\">\n            <h3 id=\"name\"></h3>\n            <ul className=\"navbar-nav ml-auto navrbar-right\">\n              <li className=\"nav-item active\">\n                <a className=\"nav-link\" href=\"#\">\n                  Home <span className=\"sr-only\">(current)</span>\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  My Account\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"#\">\n                  Contact\n                </a>\n              </li>\n              <li className=\"nav-item\">\n                <a className=\"nav-link\" href=\"/\" onClick={logout}>\n                  Exit\n                </a>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </header>\n\n      <button\n        type=\"submit\"\n        id=\"play\"\n        className=\"btn btn-mixed2 btn-block text-uppercase rounded-pill shadow-sm\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}\n      >\n        Create a profile\n      </button>\n\n      <TableContainer component={Paper}>\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Name</StyledTableCell>\n              <StyledTableCell>Mobile no</StyledTableCell>\n              <StyledTableCell>Gender</StyledTableCell>\n              <StyledTableCell>Role</StyledTableCell>\n              <StyledTableCell>Skills</StyledTableCell>\n              <StyledTableCell>Email Id</StyledTableCell>\n              <StyledTableCell>Profile Pic</StyledTableCell>\n              <StyledTableCell align=\"right\">Resume</StyledTableCell>\n              <StyledTableCell align=\"right\">Dob</StyledTableCell>\n              <StyledTableCell align=\"right\">Actions</StyledTableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tableData.map((row, index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {row.Name}\n                </StyledTableCell>\n                <StyledTableCell>{row.Mobile}</StyledTableCell>\n                <StyledTableCell>{row.Gender}</StyledTableCell>\n                <StyledTableCell>{row.Role}</StyledTableCell>\n                <StyledTableCell>{row.Skills}</StyledTableCell>\n                <StyledTableCell>{row.Email}</StyledTableCell>\n                <StyledTableCell>\n                  <Avatar className={classes.AvatarCol2} src={row.ProfileImg} />\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <Button\n                    style={{ cursor: \"pointer\" }}\n                    onClick={(e) =>\n                      viewRecordModal(e, [row.DocImg, row.DocName])\n                    }\n                  >\n                    Click to view Document\n                  </Button>\n                </StyledTableCell>\n                <StyledTableCell align=\"right\">{row.DOB}</StyledTableCell>\n                <StyledTableCell align=\"right\">\n                  <EditIcon\n                    onClick={() => editModal(row)}\n                    style={{ color: \"blue\", cursor: \"pointer\" }}\n                  />{\" \"}\n                  <HighlightOff\n                    onClick={() => deleteModal(row.profileId)}\n                    style={{ color: \"red\", cursor: \"pointer\" }}\n                  />\n                </StyledTableCell>\n              </StyledTableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Create a profile!</DialogTitle>\n        <DialogContent dividers>\n          <Box className={classes.ModalForm}>\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <Box\n                style={{\n                  width: \"140px\",\n                  height: \"140px\",\n                  background: \"white\",\n                  borderRadius: \"50%\",\n                  boxShadow: `0 1px 1px rgba(0,0,0,0.12), \n                              0 2px 2px rgba(0,0,0,0.12), \n                              0 4px 4px rgba(0,0,0,0.12), \n                              0 8px 8px rgba(0,0,0,0.12),\n                              0 16px 16px rgba(0,0,0,0.12)`,\n                  margin: \"25px auto\",\n                  textAlign: \"right\",\n                  padding: \"10px\",\n                  display: \"flex\",\n                }}\n              >\n                {Image ? (\n                  <Avatar className={classes.AvatarCol} src={Image} />\n                ) : null}\n              </Box>\n              <label\n                style={{\n                  textAlign: \"center\",\n                  margin: \"20px auto\",\n                  display: \"block\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                <div>\n                  <Button\n                    onClick={handleClick}\n                    style={{\n                      width: \"140px\",\n                      borderRadius: \"50px\",\n                      background: \"#343a40\",\n                      border: \"none\",\n                      height: \"40px\",\n                      textAlign: \"center\",\n                      color: \"#fff\",\n                      // lineHeight: '40px',\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    Edit Picture\n                  </Button>\n                  <input\n                    id=\"file\"\n                    name=\"file\"\n                    type=\"file\"\n                    accept=\" image/jpeg, image/png\"\n                    ref={hiddenFileInput}\n                    style={customStyles}\n                    onChange={handlePicChange}\n                    className=\"form-control\"\n                  />\n                </div>\n              </label>\n              <div className=\"mb-3\">\n                <label for=\"exampleInputPassword1\" className=\"form-label\">\n                  Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  ref={register({\n                    required: \"This field is required\",\n                  })}\n                ></input>\n                {errors.name && <p id=\"error\">{errors.name.message}</p>}\n              </div>\n              <div className=\"mb-3\">\n                <label for=\"exampleInputEmail1\" className=\"form-label\">\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  ref={register({\n                    required: \"This field is required\",\n                    pattern: /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/,\n                  })}\n                ></input>\n                {errors.email && <p id=\"error\">{errors.email.message}</p>}\n              </div>\n              <div className=\"mb-3\">\n                <label for=\"mobilenumber\" className=\"form-label\">\n                  Mobile Number\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"mobile\"\n                  aria-describedby=\"mobileHelp\"\n                  ref={register({\n                    required: \"Please enter a valid number with +91\",\n                    pattern: /^((\\+){1}91){1}[1-9]{1}[0-9]{9}$/,\n                  })}\n                ></input>\n                {errors.mobile && <p id=\"error\">{errors.mobile.message}</p>}\n              </div>\n\n              <div className=\"mb-3\">\n                <FormGroup row component=\"fieldset\">\n                  <FormLabel component=\"legend\">Gender</FormLabel>\n                  <RadioGroup\n                    aria-label=\"gender\"\n                    name=\"gender1\"\n                    value={gender}\n                    onChange={genderChange}\n                    ref={register({\n                      required: \"This field is required\",\n                    })}\n                  >\n                    <FormControlLabel\n                      value=\"female\"\n                      control={<Radio />}\n                      label=\"Female\"\n                    />\n                    <FormControlLabel\n                      value=\"male\"\n                      control={<Radio />}\n                      label=\"Male\"\n                    />\n                    <FormControlLabel\n                      value=\"other\"\n                      control={<Radio />}\n                      label=\"Other\"\n                    />\n                  </RadioGroup>\n                </FormGroup>\n                {errors.gender1 && <p id=\"error\">{errors.gender1.message}</p>}\n              </div>\n              <div className=\"mb-3\">\n                <label for=\"date\" className=\"form-label\">\n                  Date of Birth\n                </label>\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  name=\"DOB\"\n                  ref={register({\n                    required: \"This field is required\",\n                  })}\n                ></input>\n                {errors.DOB && <p id=\"error\">{errors.DOB.message}</p>}\n              </div>\n              <div className=\"mb-3\">\n                <label for=\"date\" className=\"form-label\">\n                  Select your role\n                </label>{\" \"}\n                <select\n                  name=\"role\"\n                  ref={register({\n                    required: \"This field is required\",\n                  })}\n                >\n                  <option value=\"admin\">Admin</option>\n                  <option value=\"user\">User</option>\n                </select>\n                {errors.role && <p id=\"error\">{errors.role.message}</p>}\n              </div>\n\n              <div className=\"mb-3\">\n                <label for=\"skills\" className=\"form-label\">\n                  Skills\n                </label>\n                <FormGroup marginY={2} row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.NodeJs}\n                        onChange={handleChange}\n                        name=\"NodeJs\"\n                      />\n                    }\n                    label=\"Node Js\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.Php}\n                        onChange={handleChange}\n                        name=\"Php\"\n                      />\n                    }\n                    label=\"Php\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.MongoDB}\n                        onChange={handleChange}\n                        name=\"MongoDB\"\n                      />\n                    }\n                    label=\"Mongo DB\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.Mysql}\n                        onChange={handleChange}\n                        name=\"Mysql\"\n                      />\n                    }\n                    label=\"MySql\"\n                  />\n                </FormGroup>\n              </div>\n\n              <Box>\n                <input\n                  id=\"file\"\n                  name=\"file\"\n                  type=\"file\"\n                  accept=\" application/pdf, application/docx\"\n                  style={customStyles}\n                  ref={hiddenFileInput2}\n                  onChange={handleFileChange}\n                  className=\"form-control\"\n                />\n                <label htmlFor=\"file-input\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"#111d4e\"\n                    size=\"large\"\n                    onClick={handleClick2}\n                    className={classes.button}\n                    component=\"span\"\n                    startIcon={<CloudUploadIcon />}\n                  >\n                    Upload Resume\n                  </Button>\n                </label>\n                {fileNotFound == false ? (\n                  <p className=\"h4\" className={classes.error}>\n                    File is mandatory\n                  </p>\n                ) : (\n                  \"\"\n                )}\n                {report != \"\" ? (\n                  <p className=\"h4\" className={classes.fileUploaded}>\n                    File Uploaded\n                  </p>\n                ) : null}\n              </Box>\n              <button\n                style={{ display: \"none\" }}\n                ref={saveButton}\n                type=\"submit\"\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n            </form>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"login\" onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button id=\"login\" onClick={submit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n\nexport default TablePage;\n","import React from \"react\";\nimport { useFormik } from \"formik\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport { Avatar, Box, useTheme, Button } from \"@material-ui/core\";\nimport CloudUploadIcon from \"@material-ui/icons/CloudUpload\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport SnackbarAlert from \"../Snack/SnackbarAlert\";\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function ProfileEdit(props) {\n  const { profileData, modalEdit, profilesubmit, updateProfile } = props;\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const [Profile, setFile] = React.useState(\"\");\n  const [Image, previewImage] = React.useState(\"\");\n  const [gender, setGender] = React.useState(\"f\");\n  const [state, setState] = React.useState({\n    NodeJs: false,\n    Php: false,\n    MongoDB: false,\n    Mysql: false,\n  });\n  const [fileNotFound, setFileNotFound] = React.useState(false);\n  const [report, setReport] = React.useState([]);\n  const [multiButton, setmultiButton] = React.useState(false);\n  const [alertType, setAlertType] = React.useState(\"\");\n  const [snackBarMessage, setSnackBarMessage] = React.useState(\"\");\n  const [isSnackBarOpen, setOpenSnackBar] = React.useState(false);\n\n  React.useEffect(() => {\n    if (modalEdit == null) {\n      //\n    } else if (modalEdit == false) {\n      setOpen(false);\n    } else {\n      setOpen(!false);\n      previewImage(profileData?.ProfileImg);\n      setReport(profileData?.DocImg);\n      setFileNotFound(true);\n      setGender(profileData?.Gender);\n      formik.setFieldValue(\"gender1\", profileData?.Gender);\n      profileData?.Skills.map((list) => {\n        state[list] = true;\n      });\n    }\n  }, [modalEdit]);\n\n  const saveButton = React.useRef({});\n\n  const handleClose = () => {\n    profilesubmit(false);\n    setOpen(false);\n  };\n\n  const hiddenFileInput = React.useRef();\n\n  const handleClick = (event) => {\n    hiddenFileInput.current.click();\n  };\n\n  const handlePicChange = (event) => {\n    event.preventDefault();\n\n    let reader = new FileReader();\n    let fileimage = event.target.files[0];\n\n    reader.onloadend = () => {\n      setFile(fileimage);\n      previewImage(reader.result);\n    };\n    reader.readAsDataURL(fileimage);\n  };\n\n  const genderChange = (event) => {\n    setGender(event.target.value);\n    formik.setFieldValue(\"gender1\", event.target.value);\n  };\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const handleFileChange = (event) => {\n    setFileNotFound(true);\n    setReport(event.target.files);\n  };\n\n  const customStyles = {\n    height: \"100%\",\n    position: \"absolute\",\n    top: \"0\",\n    right: \"0\",\n    zIndex: \"99\",\n    cursor: \"pointer\",\n    display: \"none\",\n    /*This makes the button huge. If you want a bigger button, increase the font size*/\n    fontSize: \"50px\",\n    /*Opacity settings for all browsers*/\n    opacity: \"0\",\n    mozOpacity: \"0\",\n    msFilter: \"progid:DXImageTransform.Microsoft.Alpha(opacity=0)\",\n  };\n\n  const profileSubmit = (e) => {\n    saveButton.current.click();\n  };\n\n  const submit = async (data) => {\n    const file = report[0];\n    if (report === profileData?.DocImg && Image == profileData?.ProfileImg) {\n      updateProfile({\n        ...data,\n        profileImg: Image,\n        docImg: report,\n        profileName: profileData?.ProfileName,\n        DocName: profileData?.DocName,\n        Gender: gender,\n        skills: state,\n        profileId: profileData?.profileId,\n      });\n    } else if (report.length && Profile != \"\") {\n      if (\n        Profile.name.split(\".\").pop().search(\"pdf\") === 0 ||\n        Profile.name.split(\".\").pop().search(\"docx\") === 0\n      ) {\n        setOpenSnackBar(true);\n        setSnackBarMessage(\n          \"Pdf and Docx file are not supported for profile picture!\"\n        );\n        setmultiButton(false);\n        setAlertType(\"info\");\n      } else if (\n        file.name.split(\".\").pop().search(\"jpg\") === 0 ||\n        file.name.split(\".\").pop().search(\"png\") === 0 ||\n        file.name.split(\".\").pop().search(\"jpeg\") === 0\n      ) {\n        setOpenSnackBar(true);\n        setSnackBarMessage(\"Jpg and Png file are not supported for Resume!\");\n        setmultiButton(false);\n        setAlertType(\"info\");\n      } else if (\n        Profile.name.split(\".\").pop().search(\"pdf\") !== 0 ||\n        Profile.name.split(\".\").pop().search(\"docx\") !== 0 ||\n        file.name.split(\".\").pop().search(\"jpg\") !== 0 ||\n        file.name.split(\".\").pop().search(\"png\") !== 0 ||\n        file.name.split(\".\").pop().search(\"jpeg\") !== 0\n      ) {\n        let base64 = await convertBase64(Profile);\n        let base64doc = await convertBase64(file);\n        // let format = base64.split(\",\");\n        // let docformat = base64doc.split(\",\");\n\n        updateProfile({\n          ...data,\n          profileImg: base64,\n          docImg: base64doc,\n          profileName: Profile.name,\n          docName: file.name,\n          Gender: gender,\n          skills: state,\n          profileId: profileData?.profileId,\n        });\n      }\n    } else {\n      setOpenSnackBar(true);\n      setSnackBarMessage(\"Profile Picture and Resume are mandatory!\");\n      setmultiButton(false);\n      setAlertType(\"info\");\n    }\n    profilesubmit(false);\n    setOpen(false);\n    setReport(\"\");\n    previewImage(\"\");\n    formik.resetForm();\n  };\n\n  const convertBase64 = (file) => {\n    return new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsDataURL(file);\n      fileReader.onload = () => {\n        resolve(fileReader.result);\n      };\n\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n  };\n\n  const hideSnackBar = () => {\n    setOpenSnackBar(false);\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: profileData?.Name,\n      email: profileData?.Email,\n      mobile: profileData?.Mobile,\n      gender1: profileData?.Gender,\n      DOB: profileData?.DOB,\n      role: profileData?.Role,\n    },\n    enableReinitialize: true,\n    onSubmit: submit,\n  });\n\n  return (\n    <div>\n      <SnackbarAlert\n        isOpen={isSnackBarOpen}\n        message={snackBarMessage}\n        alertType={alertType}\n        multibutton={multiButton}\n        primaryClick={hideSnackBar}\n      />\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">Update profile!</DialogTitle>\n        <DialogContent dividers>\n          <Box className={classes.ModalForm}>\n            <form onSubmit={formik.handleSubmit}>\n              <Box\n                style={{\n                  width: \"140px\",\n                  height: \"140px\",\n                  background: \"white\",\n                  borderRadius: \"50%\",\n                  boxShadow: `0 1px 1px rgba(0,0,0,0.12), \n                              0 2px 2px rgba(0,0,0,0.12), \n                              0 4px 4px rgba(0,0,0,0.12), \n                              0 8px 8px rgba(0,0,0,0.12),\n                              0 16px 16px rgba(0,0,0,0.12)`,\n                  margin: \"25px auto\",\n                  textAlign: \"right\",\n                  padding: \"10px\",\n                  display: \"flex\",\n                }}\n              >\n                {Image ? (\n                  <Avatar className={classes.AvatarCol} src={Image} />\n                ) : null}\n              </Box>\n              <label\n                style={{\n                  textAlign: \"center\",\n                  margin: \"20px auto\",\n                  display: \"block\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                <div>\n                  <Button\n                    onClick={handleClick}\n                    style={{\n                      width: \"140px\",\n                      borderRadius: \"50px\",\n                      background: \"#343a40\",\n                      border: \"none\",\n                      height: \"40px\",\n                      textAlign: \"center\",\n                      color: \"#fff\",\n                      // lineHeight: '40px',\n                      cursor: \"pointer\",\n                    }}\n                  >\n                    Edit Picture\n                  </Button>\n                  <input\n                    id=\"file\"\n                    name=\"file\"\n                    type=\"file\"\n                    accept=\" image/jpeg, image/png\"\n                    ref={hiddenFileInput}\n                    style={customStyles}\n                    onChange={handlePicChange}\n                    className=\"form-control\"\n                  />\n                </div>\n              </label>\n              <div className=\"mb-3\">\n                <label for=\"exampleInputPassword1\" className=\"form-label\">\n                  Name\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"name\"\n                  name=\"name\"\n                  onChange={formik.handleChange}\n                  value={formik.values.name}\n                ></input>\n              </div>\n              <div className=\"mb-3\">\n                <label for=\"exampleInputEmail1\" className=\"form-label\">\n                  Email address\n                </label>\n                <input\n                  type=\"email\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  id=\"email\"\n                  aria-describedby=\"emailHelp\"\n                  onChange={formik.handleChange}\n                  value={formik.values.email}\n                ></input>\n              </div>\n              <div className=\"mb-3\">\n                <label for=\"mobilenumber\" className=\"form-label\">\n                  Mobile Number\n                </label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"mobile\"\n                  id=\"mobile\"\n                  aria-describedby=\"mobileHelp\"\n                  onChange={formik.handleChange}\n                  value={formik.values.mobile}\n                ></input>\n              </div>\n\n              <div className=\"mb-3\">\n                <FormGroup row component=\"fieldset\">\n                  <FormLabel component=\"legend\">Gender</FormLabel>\n                  <RadioGroup\n                    aria-label=\"gender\"\n                    name=\"gender1\"\n                    value={gender}\n                    onChange={genderChange}\n                  >\n                    <FormControlLabel\n                      value=\"female\"\n                      control={<Radio />}\n                      label=\"Female\"\n                    />\n                    <FormControlLabel\n                      value=\"male\"\n                      control={<Radio />}\n                      label=\"Male\"\n                    />\n                    <FormControlLabel\n                      value=\"other\"\n                      control={<Radio />}\n                      label=\"Other\"\n                    />\n                  </RadioGroup>\n                </FormGroup>\n              </div>\n              <div className=\"mb-3\">\n                <label for=\"date\" className=\"form-label\">\n                  Date of Birth\n                </label>\n                <input\n                  type=\"date\"\n                  className=\"form-control\"\n                  name=\"DOB\"\n                  onChange={formik.handleChange}\n                  value={formik.values.DOB}\n                ></input>\n              </div>\n              <div className=\"mb-3\">\n                <label for=\"date\" className=\"form-label\">\n                  Select your role\n                </label>{\" \"}\n                <select\n                  name=\"role\"\n                  onChange={formik.handleChange}\n                  value={formik.values.role}\n                >\n                  <option value=\"admin\">Admin</option>\n                  <option value=\"user\">User</option>\n                </select>\n              </div>\n\n              <div className=\"mb-3\">\n                <label for=\"skills\" className=\"form-label\">\n                  Skills\n                </label>\n                <FormGroup marginY={2} row>\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.NodeJs}\n                        onChange={handleChange}\n                        name=\"NodeJs\"\n                      />\n                    }\n                    label=\"Node Js\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.Php}\n                        onChange={handleChange}\n                        name=\"Php\"\n                      />\n                    }\n                    label=\"Php\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.MongoDB}\n                        onChange={handleChange}\n                        name=\"MongoDB\"\n                      />\n                    }\n                    label=\"Mongo DB\"\n                  />\n                  <FormControlLabel\n                    control={\n                      <Checkbox\n                        checked={state.Mysql}\n                        onChange={handleChange}\n                        name=\"Mysql\"\n                      />\n                    }\n                    label=\"MySql\"\n                  />\n                </FormGroup>\n              </div>\n\n              <Box>\n                <input\n                  accept=\".pdf,.doc\"\n                  className={classes.uploadInput}\n                  id=\"file-input\"\n                  name=\"file\"\n                  type=\"file\"\n                  onChange={handleFileChange}\n                />\n                <label htmlFor=\"file-input\">\n                  <Button\n                    variant=\"contained\"\n                    color=\"#111d4e\"\n                    size=\"large\"\n                    className={classes.button}\n                    component=\"span\"\n                    startIcon={<CloudUploadIcon />}\n                  >\n                    Upload Resume\n                  </Button>\n                </label>\n                {fileNotFound == false ? (\n                  <p className=\"h4\" className={classes.error}>\n                    File is mandatory\n                  </p>\n                ) : (\n                  \"\"\n                )}\n                {report == undefined ? null : report.length ? (\n                  <p className=\"h4\" className={classes.fileUploaded}>\n                    File Uploaded\n                  </p>\n                ) : null}\n              </Box>\n              <button\n                style={{ display: \"none\" }}\n                ref={saveButton}\n                type=\"submit\"\n                className=\"btn btn-primary\"\n              >\n                Submit\n              </button>\n            </form>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          <Button id=\"login\" onClick={handleClose} color=\"primary\">\n            Cancel\n          </Button>\n          <Button id=\"login\" onClick={profileSubmit} color=\"primary\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  AvatarCol: {\n    width: \"100%\",\n    height: \"100%\",\n  },\n  AvatarCol2: {\n    width: \"45%\",\n    height: \"65px\",\n  },\n  uploadInput: {\n    display: \"none\",\n  },\n  error: {\n    color: theme.palette.error.main,\n  },\n  fileUploaded: {\n    color: theme.palette.success.main,\n    margin: \"8px 0\",\n  },\n  ModalForm: {\n    width: \"100%\",\n    padding: \"40px\",\n    \"@media (max-width:767px)\": {\n      padding: \"20px\",\n      height: \"400px\",\n      overflowY: \"auto\",\n    },\n  },\n  table: {\n    position: \"relative\",\n    marginTop: \"10%\",\n  },\n}));\n","import React from \"react\";\nimport axios from \"axios\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport {\n  LandingPage,\n  TablePage,\n  ProfileEdit,\n} from \"./Components/Container/Container\";\n\nexport default function App() {\n  const [state, setState] = React.useState(\"\");\n  const [data, setData] = React.useState([]);\n  const [deleteStatus, setDeleteStatus] = React.useState([]);\n\n  const userDetails = (data) => {\n    if (data.data) {\n      axios\n        .post(\"/login\", { ...data })\n        .then((res) => {\n          console.log(res)\n          localStorage.setItem(\"name\", res.data.Name);\n          setState(res.data);\n        })\n        .catch((error) => console.log(error));\n    } else {\n      axios\n        .post(\"/registration\", { ...data })\n        .then((res) => {\n          setState(res.data);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  const profileDetails = (data) => {\n    if (data) {\n      axios\n        .post(\"/profilecreation\", { ...data })\n        .then((res) => {\n          setState(res.data);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  const profileFetch = () => {\n    axios\n      .get(\"/profilefetch\")\n      .then((res) => {\n        console.log(res);\n        setData(res);\n      })\n      .catch((error) => console.error(error));\n  };\n\n  const updateProfile = (data) => {\n    if (data) {\n      axios\n        .put(\"/profileupdate\", { ...data })\n        .then((res) => {\n          setState(res.data);\n        })\n        .catch((error) => console.log(error));\n    }\n  };\n\n  const deleteprofile = (data) => {\n    console.log(data);\n    axios\n      .delete(\"/profiledelete\", { data })\n      .then((res) => {\n        setDeleteStatus(res.data);\n      })\n      .catch((error) => console.log(error));\n  };\n\n  return (\n    <>\n      <Router>\n        <Switch>\n          <Route\n            exact\n            path=\"/\"\n            render={() => (\n              <LandingPage loginDetails={userDetails} data={state} />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/table\"\n            render={() => (\n              <TablePage\n                profileCreation={profileDetails}\n                profileGrasp={profileFetch}\n                data={state}\n                profile={data}\n                updateProfileDetails={updateProfile}\n                deleteprofile={deleteprofile}\n                deleteStatus={deleteStatus}\n              />\n            )}\n          />\n\n          <Route exact path=\"/\">\n            {localStorage.getItem(\"name\") !== null ? (\n              <Redirect to=\"/table\" />\n            ) : (\n              <LandingPage />\n            )}\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}